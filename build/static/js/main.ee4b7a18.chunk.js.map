{"version":3,"sources":["img/wind.svg","img/wind_arrow.svg","img/humidity.svg","img/pressure.svg","components/Error.js","components/OpenWeatherMapApiKey.js","components/Info.js","components/SearchCity.js","components/AdditionalFunction.js","components/WeatherToday.js","components/WeatherMap.js","components/WeatherHourly.js","components/PageSlider.js","components/WeatherHourlyList.js","components/WeatherDaily.js","components/WeatherDailyList.js","components/DataRequestFunction.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Error","message","className","OpenWeatherMapApiKey","error","setError","coordinates","initApiKey","useState","inputValue","setInputValue","inputRef","useRef","useEffect","current","focus","onSubmit","e","preventDefault","apiKey","trim","lat","lon","ref","type","name","placeholder","value","onChange","target","Info","city","SearchCity","weatherMethod","submitCity","getDate","inputTimestamp","tz","currentDate","Date","date","getUTCDate","month","getUTCMonth","year","getUTCFullYear","getTime","hours","getUTCHours","minutes","getUTCMinutes","getDayOfWeek","getUTCDay","WeatherToday","props","weatherInfo","dt","timezone_offset","temp","src","weather","icon","alt","description","feels_like","require","wind_speed","style","transform","wind_deg","humidity","Math","round","pressure","sunrise","sunset","clouds","dew_point","uvi","visibility","WeatherMap","selectNewPlace","needCityName","refMap","currentZoom","DefaultIcon","L","iconUrl","shadowUrl","iconShadow","Marker","prototype","options","center","zoom","maxZoom","attributionControl","zoomControl","doubleClickZoom","scrollWheelZoom","dragging","animate","easeLinearity","onDblClick","leafletElement","getZoom","latlng","lng","TileLayer","url","position","Popup","WeatherHourly","title","PageSlider","objectList","displayedValues","currentValue","maxValue","setCurrentValue","refNavBackward","refNavForward","countSelection","ceil","pageSelection","Array","fill","map","_","i","key","onClick","bind","classList","contains","add","remove","prevCurrentHour","WeatherHourlyList","countHoursDisplayed","currentHour","setCurrentHour","countHours","min","length","WeatherDaily","day","night","WeatherDailyList","countDaysDisplayed","countDays","getDataFromWeatherByCityName","cityName","fetch","then","response","json","catch","reject","getDataFromWeatherByGeographicCoordinates","getDataFromOnecallByGeographicCoordinates","App","setCoordinates","sessionStorage","getItem","setCity","data","setData","setting","searchGeographicCoordinatesByCityName","a","err","info","cod","coord","setDataByGeographicCoordinates","setItem","console","log","hourly","daily","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ee4b7a18.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wind.330e5376.svg\";","module.exports = __webpack_public_path__ + \"static/media/wind_arrow.3096aa4d.svg\";","module.exports = __webpack_public_path__ + \"static/media/humidity.a6765183.svg\";","module.exports = __webpack_public_path__ + \"static/media/pressure.e61177a5.svg\";","import React from \"react\";\r\n\r\nfunction Error({message}) {\r\n\r\n\treturn(\r\n\t\t<>\r\n\t\t\t{message &&\r\n\t\t\t\t<div className=\"error\">\r\n\t\t\t\t\t\t{message}\r\n\t\t\t\t</div>}\r\n\t\t</>\r\n\t\t);\r\n}\r\n\r\nexport default Error;","import React, {useState, useEffect, useRef} from \"react\"\r\nimport Error from \"./Error\"\r\n\r\nfunction OpenWeatherMapApiKey ({error, setError, coordinates, initApiKey}) {\r\n\tconst [inputValue, setInputValue] = useState('')\r\n\tconst inputRef = useRef(null)\r\n\r\n\tconst changeHandler = e => {\r\n\t\tsetInputValue(e.target.value)\r\n\t\tsetError('')\r\n\t}\r\n\r\n\tconst submitApiKey = (e) => {\r\n\t\te.preventDefault()\r\n\t\tlet apiKey = inputValue.trim();\r\n\t\t\r\n\t\tif(apiKey) {\r\n\t\t\tinitApiKey(coordinates.lat, coordinates.lon, apiKey)\r\n\t\t} else {\r\n\t\t\tsetError('Введите ключ API!')\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tinputRef.current.focus();\r\n\t},[])\r\n\r\n\treturn(\r\n\t\t<div className=\"api-key__container\">\r\n\t\t\t<div className=\"api-key\">\r\n\t\t\t\t<div className=\"api-key__title\">\r\n\t\t\t\t\tВведите API-ключ для доступа к данным о погоде на сайте openweathermap.org\r\n\t\t\t\t</div>\r\n\t\t\t\t<form className=\"api-key__form\" onSubmit={submitApiKey}>\r\n\t\t\t\t\t<input ref={inputRef} type='text' name='apiKey' placeholder='API Key' value={inputValue} onChange={changeHandler} />\r\n\t\t\t\t\t<button>Применить</button>\r\n\t\t\t\t</form>\r\n\t\t\t\t<div className=\"api-key__error\">\r\n\t\t\t\t\t<Error message={error} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default OpenWeatherMapApiKey;","import React from \"react\";\r\n\r\nfunction Info ({city}) {\r\n\r\n\treturn(\r\n\t\t<div className=\"header__info\">\r\n\t\t\t<div>Прогноз погоды</div>\r\n\t\t\t<div className=\"header__city\">{city}</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Info;","import React, {useState, useEffect, useRef} from \"react\";\r\n\r\nfunction SearchCity ({weatherMethod, setError}) {\r\n\tconst [inputValue, setInputValue] = useState('')\r\n\tconst inputRef = useRef(null)\r\n\r\n\tconst changeHandler = e => {\r\n\t\tsetInputValue(e.target.value)\r\n\t\tsetError('')\r\n\t}\r\n\r\n\tconst submitCity = (e) =>{\r\n\t\te.preventDefault()\r\n\r\n\t\tlet city = inputValue.trim();\r\n\r\n\t\tif(city) {\r\n\t\t\tweatherMethod(city)\r\n\t\t} else {\r\n\t\t\tsetError('Введите название города!')\r\n\t\t} \r\n\t\t\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tinputRef.current.focus();\r\n\t},[])\r\n\t\r\n\treturn(\r\n\t\t<form className=\"header__search\" onSubmit={(e) => submitCity(e)}>\r\n\t\t\t<input ref={inputRef} type='text' name='city' placeholder='Город' value={inputValue} onChange={changeHandler}/>\r\n\t\t\t<button>Получить погоду</button>\r\n\t\t</form>\r\n\t\t);\r\n}\r\n\r\nexport default SearchCity;","const getDate = (inputTimestamp, tz) =>{\r\n    const MONTHS = ['января', 'февраля', 'марта', 'апреля', 'мая', 'июня', 'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря'];\r\n    var currentDate = new Date((inputTimestamp+tz)*1000);\r\n    let date = currentDate.getUTCDate();\r\n    let month = currentDate.getUTCMonth();\r\n    let year = currentDate.getUTCFullYear();\r\n    return (date + ' ' + MONTHS[month] + ' ' + year);\r\n}\r\nconst getTime = (inputTimestamp, tz) =>{\r\n    var currentDate = new Date((inputTimestamp+tz)*1000);\r\n    let hours = currentDate.getUTCHours();\r\n    let minutes = currentDate.getUTCMinutes();\r\n    return (hours < 10 ? '0' + hours : hours) + ':' + (minutes < 10 ? '0' + minutes : minutes);\r\n}\r\nconst getDayOfWeek = (inputTimestamp, tz) =>{\r\n    const DaysOfWeek = ['вс', 'пн', 'вт', 'ср', 'чт', 'пт', 'сб'];\r\n    var currentDate = new Date((inputTimestamp+tz)*1000);\r\n    let day = currentDate.getUTCDay();\r\n    return DaysOfWeek[day];\r\n}\r\n//1 hPa = 0.75006375541921 mmHg\r\nconst convertHpaToMmhg = (hpa) => hpa*0.75006375541921;\r\n\r\nexport {getDate, getTime, getDayOfWeek, convertHpaToMmhg};","import React from \"react\";\r\nimport {getDate, getTime, getDayOfWeek, convertHpaToMmhg} from \"./AdditionalFunction\";\r\n\r\nfunction WeatherToday (props) {\r\n\r\n\treturn(\r\n\t\t<div className=\"today-panel__data\">\r\n\t\t\t<div className=\"today-panel__row\">\r\n\t\t\t\t<div className=\"today-panel__column\">\r\n\t\t\t\t\t<div className=\"today-info\">{getDate(props.weatherInfo.dt, props.timezone_offset)}</div>\r\n\t\t\t\t\t<div className=\"today-info\">{getTime(props.weatherInfo.dt, props.timezone_offset)}</div>\r\n\t\t\t\t\t<div className=\"today-info\">{getDayOfWeek(props.weatherInfo.dt, props.timezone_offset)}</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"today-panel__row\">\r\n\t\t\t\t<div className=\"today-panel__container-main\">\r\n\t\t\t\t\t<div className=\"today-panel__container\">\r\n\t\t\t\t\t\t<div className=\"temperature\">{props.weatherInfo.temp > 0 ? \"+\" : \"\"}{props.weatherInfo.temp}&#176;C</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"today-panel__container today-img\"><img className=\"today-icon\" src={`http://openweathermap.org/img/wn/${props.weatherInfo.weather[0].icon}@4x.png`} alt={props.weatherInfo.weather[0].description} /></div>\r\n\t\t\t\t\t<div className=\"today-panel__column\">\r\n\t\t\t\t\t\t<div className=\"today-panel__container\">{props.weatherInfo.weather[0].description}</div>\r\n\t\t\t\t\t\t<div className=\"today-panel__container\">ощущается как {props.weatherInfo.feels_like > 0 ? \"+\" : \"\"}{props.weatherInfo.feels_like}&#176;C</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"today-panel__row\">\r\n\t\t\t\t<div className=\"today-panel__item\">\r\n\t\t\t\t\t<img className=\"weather-icon\" src={require(\"../img/wind.svg\")} alt=\"Ветер\" />\r\n\t\t\t\t\t<span> {props.weatherInfo.wind_speed} м/с</span>\r\n\t\t\t\t\t<img className=\"weather-icon\" src={require(\"../img/wind_arrow.svg\")} style={{transform: `rotate(${props.weatherInfo.wind_deg + 180}deg)`}} alt=\"Направление ветра\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"today-panel__item\">\r\n\t\t\t\t\t<img className=\"weather-icon\" src={require(\"../img/humidity.svg\")} alt=\"Влажность\" />\r\n\t\t\t\t\t<span>{props.weatherInfo.humidity}%</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"today-panel__item\">\r\n\t\t\t\t\t<img className=\"weather-icon\" src={require(\"../img/pressure.svg\")} alt=\"Давление\" />\r\n\t\t\t\t\t<span>{Math.round(convertHpaToMmhg(props.weatherInfo.pressure))} мм рт ст</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"today-panel__row\">\r\n\t\t\t\t<div className=\"today-panel__container\">\r\n\t\t\t\t\t<div className=\"today-panel__item\">Восход: {getTime(props.weatherInfo.sunrise, props.timezone_offset)}</div>\r\n\t\t\t\t\t<div className=\"today-panel__item\">Закат: {getTime(props.weatherInfo.sunset, props.timezone_offset)}</div>\r\n\t\t\t\t\t<div className=\"today-panel__item\">Облачность: {props.weatherInfo.clouds} %</div>\r\n\t\t\t\t\t<div className=\"today-panel__item\">Точка росы: {props.weatherInfo.dew_point}&#176;C</div>\r\n\t\t\t\t\t<div className=\"today-panel__item\">UV-индекс: {props.weatherInfo.uvi} </div>\r\n\t\t\t\t\t<div className=\"today-panel__item\">Видимость: {props.weatherInfo.visibility} м</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t);\r\n}\r\nexport default WeatherToday;","import React, {useEffect, useRef} from \"react\"\r\n\r\nimport L from 'leaflet'\r\nimport { Map as LeafletMap, TileLayer, Marker, Popup} from 'react-leaflet'\r\nimport 'leaflet/dist/leaflet.css'\r\n\r\nimport icon from 'leaflet/dist/images/marker-icon.png'\r\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png'\r\n\r\nfunction WeatherMap({lat, lon, selectNewPlace, needCityName}) {\r\n\r\n\tconst refMap = useRef(null);\r\n\tconst currentZoom = useRef(6);\r\n\r\n\tconst clickMap = e => {\r\n\t\tcurrentZoom.current = refMap.current.leafletElement.getZoom()\r\n\t\tif(e) {\r\n\t\t\tneedCityName.current=true\r\n\t\t\tselectNewPlace({lat: e.latlng.lat, lon: e.latlng.lng});\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() =>{\r\n\t\tlet DefaultIcon = L.icon({\r\n\t\t\ticonUrl: icon,\r\n\t\t\tshadowUrl: iconShadow\r\n\t\t})\r\n\t\tL.Marker.prototype.options.icon = DefaultIcon\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<LeafletMap className=\"map\"\r\n\t\t\t\tref={refMap}\r\n\t\t\t\tcenter={[lat, lon]}\r\n\t\t\t\tzoom={currentZoom.current}\r\n\t\t\t\tmaxZoom={18}\r\n\t\t\t\tattributionControl={true}\r\n\t\t\t\tzoomControl={true}\r\n\t\t\t\tdoubleClickZoom={false}\r\n\t\t\t\tscrollWheelZoom={true}\r\n\t\t\t\tdragging={true}\r\n\t\t\t\tanimate={true}\r\n\t\t\t\teaseLinearity={0.35}\r\n\t\t\t\tonDblClick={clickMap}\r\n\t\t\t>\r\n\t\t\t\t<TileLayer url='http://{s}.tile.osm.org/{z}/{x}/{y}.png' />\r\n\t\t\t\t<Marker position={[lat, lon]}>\r\n\t\t\t\t\t<Popup>\r\n\t\t\t\t\t\t{lat}&#176;, {lon}&#176;\r\n\t\t\t\t\t</Popup>\r\n\t\t\t\t</Marker>\r\n\t\t\t</LeafletMap>\r\n\t)\r\n}\r\n\r\nexport default WeatherMap;","import React from \"react\";\r\nimport {getDate, getTime} from \"./AdditionalFunction\";\r\n\r\nfunction WeatherHourly ({weatherInfo, timezone_offset}) {\r\n\treturn(\r\n\t\t<div className=\"hourly-panel__item\">\r\n\t\t\t<div>{getDate(weatherInfo.dt, timezone_offset)} {getTime(weatherInfo.dt, timezone_offset)}</div>\r\n\t\t\t<div className=\"sm\"><img src={`http://openweathermap.org/img/wn/${weatherInfo.weather[0].icon}@2x.png`} title={weatherInfo.weather[0].description} alt={weatherInfo.weather[0].description}/></div>\r\n\t\t\t<div className=\"xs\"><img src={`http://openweathermap.org/img/wn/${weatherInfo.weather[0].icon}.png`} title={weatherInfo.weather[0].description} alt={weatherInfo.weather[0].description}/></div>\r\n\t\t\t<div>{weatherInfo.temp > 0 ? \"+\" : \"\"}{weatherInfo.temp}&#176;C</div>\r\n\t\t</div>\r\n\t\t);\r\n}\r\nexport default WeatherHourly;","import React, {useEffect, useRef} from \"react\";\r\n\r\nfunction PageSlider({objectList, displayedValues, currentValue, maxValue, setCurrentValue}) {\r\n\r\n\tconst refNavBackward = useRef(null)\r\n\tconst refNavForward = useRef(null)\r\n\r\n\tconst countSelection = Math.ceil(maxValue/(displayedValues === 0 ? 1 : displayedValues));\r\n\tconst pageSelection = new Array(countSelection).fill('').map((_, i) => {\r\n\t\tlet className = 'selector'\r\n\t\tif(i * displayedValues === currentValue) {\r\n\t\t\tclassName = 'selector active'\r\n\t\t}\r\n\t\treturn(<div className={className} key={i} onClick={setCurrentValue.bind(null, i * displayedValues)}></div>)\r\n\t})\r\n\r\n\tconst backwardClick = () => {\r\n\t\tif(currentValue < displayedValues) {\r\n\t\t\tsetCurrentValue(0)\r\n\t\t} else {\r\n\t\t\tsetCurrentValue(prevCurrentHour => prevCurrentHour - displayedValues)\r\n\t\t}\r\n\t}\r\n\r\n\tconst forwardClick = () => {\r\n\t\tif(currentValue + displayedValues > maxValue - 1) {\r\n\t\t\tsetCurrentValue(maxValue - displayedValues)\r\n\t\t} else {\r\n\t\t\tsetCurrentValue(prevCurrentHour => prevCurrentHour + displayedValues)\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif(currentValue === 0) {\r\n\t\t\tif(!refNavBackward.current.classList.contains('hide')) {\r\n\t\t\t\trefNavBackward.current.classList.add('hide')\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif(refNavBackward.current.classList.contains('hide')) {\r\n\t\t\t\trefNavBackward.current.classList.remove('hide')\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(currentValue + displayedValues === maxValue) {\r\n\t\t\tif(!refNavForward.current.classList.contains('hide')) {\r\n\t\t\t\trefNavForward.current.classList.add('hide')\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif(refNavForward.current.classList.contains('hide')) {\r\n\t\t\t\trefNavForward.current.classList.remove('hide')\r\n\t\t\t}\r\n\t\t}\r\n\t}, [currentValue, displayedValues, maxValue])\r\n\r\n\treturn(\r\n\t\t<div className=\"hourly-panel\">\r\n\t\t\t<div className=\"hourly-panel__container\">\r\n\t\t\t\t<div ref={refNavBackward} className=\"nav nav-backward\" onClick={backwardClick}></div>\r\n\t\t\t\t<div className=\"hourly-panel__row\">\r\n\t\t\t\t\t{objectList}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div ref={refNavForward} className=\"nav nav-forward\" onClick={forwardClick}></div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"nav-selector\">\r\n\t\t\t\t{pageSelection}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default PageSlider;","import React from \"react\"\r\nimport WeatherHourly from \"./WeatherHourly\"\r\nimport PageSlider from \"./PageSlider.js\"\r\n\r\nfunction WeatherHourlyList ({weatherInfo, timezone_offset, countHoursDisplayed, currentHour, setCurrentHour}) {\r\n\r\n\tconst countHours = Math.min(countHoursDisplayed, weatherInfo.length)\r\n\tconst WeatherHourlyList = new Array(countHours).fill('').map((_, i) => {\r\n\t\treturn(<WeatherHourly key={currentHour + i} weatherInfo={weatherInfo[currentHour + i]} timezone_offset={timezone_offset} />)\r\n\t})\r\n\r\n\treturn(\r\n\t\t<PageSlider objectList={WeatherHourlyList} displayedValues={countHours} currentValue={currentHour} maxValue={weatherInfo.length} setCurrentValue={setCurrentHour} />\r\n\t)\r\n}\r\nexport default WeatherHourlyList","import React from \"react\"\r\nimport {getDate, getDayOfWeek} from \"./AdditionalFunction\"\r\n\r\nfunction WeatherDaily (props) {\r\n\treturn(\r\n\t\t<div className=\"daily-panel__container\">\r\n\t\t\t<div className=\"daily-panel__item\">\r\n\t\t\t\t<div>{getDayOfWeek(props.weatherInfo.dt, props.timezone_offset)}</div>\r\n\t\t\t\t<div>{getDate(props.weatherInfo.dt, props.timezone_offset)}</div>\r\n\t\t\t\t<div><img src={`http://openweathermap.org/img/wn/${props.weatherInfo.weather[0].icon}@2x.png`} alt={props.weatherInfo.weather[0].description}/></div>\r\n\t\t\t\t<div>днём: {props.weatherInfo.temp.day > 0 ? \"+\" : \"\"}{props.weatherInfo.temp.day}&#176;C</div>\r\n\t\t\t\t<div>ночью: {props.weatherInfo.temp.night > 0 ? \"+\" : \"\"}{props.weatherInfo.temp.night}&#176;C</div>\r\n\t\t\t\t<div>{props.weatherInfo.weather[0].description}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t);\r\n}\r\nexport default WeatherDaily;","import React from \"react\"\r\nimport WeatherDaily from './WeatherDaily'\r\n\r\nfunction WeatherDailyList ({weatherInfo, timezone_offset, countDaysDisplayed}) {\r\n\tconst countDays = Math.min(countDaysDisplayed, weatherInfo.length);\r\n\tconst WeatherDailyList = new Array(countDays-1).fill('').map((_, i) => {\r\n\t\treturn(<WeatherDaily key={i+1} weatherInfo={weatherInfo[i+1]} timezone_offset={timezone_offset} />)\r\n\t})\r\n\treturn(\r\n\t\t<div className=\"daily-panel\">\r\n\t\t\t{WeatherDailyList}\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default WeatherDailyList;","const getDataFromWeatherByCityName = (cityName, key) => {\r\n\tif(!key) return null;\r\n\treturn fetch(`https://api.openweathermap.org/data/2.5/weather?units=metric&lang=ru&q=${cityName}&appid=${key}`)\r\n\t.then(response => {return response.json()})\r\n\t.catch(reject => {return ({message: `${reject.name}: ${reject.message}`})})\r\n}\r\n\r\nconst getDataFromWeatherByGeographicCoordinates = (lat, lon, key) => {\r\n\tif(!key) return null;\r\n\treturn fetch(`https://api.openweathermap.org/data/2.5/weather?units=metric&lang=ru&lat=${lat}&lon=${lon}&appid=${key}`)\r\n\t.then(response => {return response.json()})\r\n\t.catch(reject => {return ({message: `${reject.name}: ${reject.message}`})})\r\n}\r\n\r\nconst getDataFromOnecallByGeographicCoordinates = (lat, lon, key) => {\r\n\tif(!key) return null;\r\n\treturn fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=minutely&units=metric&lang=ru&appid=${key}`)\r\n\t.then(response => {return response.json()})\r\n\t.catch(reject => {return ({message: `${reject.name}: ${reject.message}`})}) //TypeError: Failed to fetch object\r\n}\r\n\r\nexport {getDataFromWeatherByCityName, getDataFromWeatherByGeographicCoordinates, getDataFromOnecallByGeographicCoordinates};","import React, {useState, useEffect, useRef} from 'react'\r\nimport OpenWeatherMapApiKey from './components/OpenWeatherMapApiKey'\r\nimport Info from './components/Info'\r\nimport SearchCity from './components/SearchCity'\r\nimport WeatherToday from './components/WeatherToday'\r\nimport WeatherMap from './components/WeatherMap'\r\nimport WeatherHourlyList from './components/WeatherHourlyList'\r\nimport WeatherDailyList from './components/WeatherDailyList'\r\nimport Error from './components/Error'\r\nimport './App.css'\r\nimport {getDataFromWeatherByCityName, getDataFromWeatherByGeographicCoordinates, getDataFromOnecallByGeographicCoordinates} from \"./components/DataRequestFunction\"\r\n\r\nfunction App() { //'a3cc488aa673730c8354dd39912b5cde';\r\n\tconst [error, setError] = useState('')\r\n\tconst [coordinates, setCoordinates] = useState({lat: 55.15, lon: 61.43})\r\n\tconst apiKey = useRef(sessionStorage.getItem('api-key'))\r\n\tconst needCityName = useRef(false)\r\n\tconst [city, setCity] = useState('Челябинск')\r\n\tconst [data, setData] = useState({})\r\n\tconst [setting, setSetting] = useState({countDaysDisplayed: 5, countHoursDisplayed: 3})\r\n\tconst [currentHour, setCurrentHour] = useState(0)\r\n\r\n\tconst searchGeographicCoordinatesByCityName = async (cityName, key = apiKey.current) => {\r\n\t\tlet err = ''\r\n\t\tlet info = await getDataFromWeatherByCityName(cityName, key)\r\n\t\tif(info.message) {\r\n\t\t\tsetError(`${info.cod ? `Код ошибки: ${info.cod}, ` : ''} ${info.message} `)\r\n\t\t} else {\r\n\t\t\tneedCityName.current = false\r\n\t\t\tif(info.coord.lat && info.coord.lon && info.name) {\r\n\t\t\t\tif(typeof(info.coord.lat) === 'number' && typeof(info.coord.lat) === 'number') {\r\n\t\t\t\t\tsetCoordinates({lat: info.coord.lat, lon: info.coord.lon})\r\n\t\t\t\t} else {\r\n\t\t\t\t\terr = 'Неверный тип данных'\r\n\t\t\t\t}\r\n\t\t\t\tsetCity(info.name)\r\n\t\t\t} else {\r\n\t\t\t\terr = 'Данные не найдены (searchGeographicCoordinatesByCityName)'\r\n\t\t\t}\r\n\t\t\tsetError(err)\r\n\t\t}\r\n\t}\r\n\r\n\tconst setDataByGeographicCoordinates = async (lat = coordinates.lat, lon = coordinates.lon, key = apiKey.current) => {\r\n\t\tif(key) {\r\n\t\t\tlet info = await getDataFromOnecallByGeographicCoordinates(lat, lon, key)\r\n\r\n\t\t\tif(info && info.message) {\r\n\t\t\t\tsetError(`${info.cod ? `Код ошибки: ${info.cod}, ` : ''} ${info.message} `)\r\n\t\t\t\tsetData({})\r\n\t\t\t\treturn false\r\n\t\t\t} else {\r\n\t\t\t\tif(!apiKey.current) {\r\n\t\t\t\t\tapiKey.current = key\r\n\t\t\t\t\tsessionStorage.setItem('api-key', key)\r\n\t\t\t\t}\r\n\t\t\t\tsetError('')\r\n\t\t\t\tsetData({...info})\r\n\t\t\t\tif(needCityName.current) {\r\n\t\t\t\t\tlet info = await getDataFromWeatherByGeographicCoordinates(lat, lon, key)\r\n\t\t\t\t\tif(info.message) {\r\n\t\t\t\t\t\tsetError(`${info.cod ? `Код ошибки: ${info.cod}, ` : ''} ${info.message} `)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif(info.name) {\r\n\t\t\t\t\t\t\tsetCity(info.name)\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tsetError('Данные не найдены (setDataByGeographicCoordinates)')\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif(apiKey.current) {\r\n\t\t\tsetDataByGeographicCoordinates(coordinates.lat, coordinates.lon, apiKey.current)\r\n\t\t}\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log('Coordinates:', coordinates)\r\n\t\tsetCurrentHour(0)\r\n\t\tsetDataByGeographicCoordinates()\r\n\t}, [coordinates.lat, coordinates.lon])\r\n\t\r\n\tuseEffect(() => {\r\n\t\t//needCityName.current = false\r\n\t\tsetDataByGeographicCoordinates(coordinates.lat, coordinates.lon)\r\n\t}, [currentHour])\r\n\r\n\treturn(\r\n\t\t<div className=\"wrapper\">\r\n\t\t\t{!apiKey.current &&\r\n\t\t\t\t<OpenWeatherMapApiKey error={error} setError={setError} coordinates={coordinates} initApiKey={setDataByGeographicCoordinates} />\r\n\t\t\t}\r\n\t\t\t{apiKey.current &&\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div className=\"main-panel\">\r\n\t\t\t\t\t\t<Error message={error} />\r\n\t\t\t\t\t\t<div className=\"header\">\r\n\t\t\t\t\t\t\t<Info city={city} />\r\n\t\t\t\t\t\t\t<SearchCity weatherMethod={searchGeographicCoordinatesByCityName} setError={setError} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"current-panel\">\r\n\t\t\t\t\t\t\t{data.current &&\r\n\t\t\t\t\t\t\t\t<div className=\"today-panel\">\r\n\t\t\t\t\t\t\t\t\t<WeatherToday weatherInfo={data.current} timezone_offset={data.timezone_offset} />\r\n\t\t\t\t\t\t\t\t\t<WeatherMap lat={coordinates.lat} lon={coordinates.lon} selectNewPlace={setCoordinates} needCityName={needCityName} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t<div className=\"bottom_line\"></div>\r\n\t\t\t\t\t\t\t{data.hourly &&\r\n\t\t\t\t\t\t\t\t<WeatherHourlyList weatherInfo={data.hourly} timezone_offset={data.timezone_offset} countHoursDisplayed={setting.countHoursDisplayed} currentHour={currentHour} setCurrentHour={setCurrentHour} />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{data.daily &&\r\n\t\t\t\t\t\t<WeatherDailyList weatherInfo={data.daily} timezone_offset={data.timezone_offset} countDaysDisplayed={setting.countDaysDisplayed} />\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}